// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebCV.Models;

namespace WebCV.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20191006122151_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebCV.Models.Contact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaseID");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Url")
                        .HasMaxLength(1000);

                    b.HasKey("ContactID");

                    b.HasIndex("BaseID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("WebCV.Models.Education", b =>
                {
                    b.Property<int>("EducationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaseID");

                    b.HasKey("EducationID");

                    b.HasIndex("BaseID");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("WebCV.Models.EducationState", b =>
                {
                    b.Property<int>("EducationStatesID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaseID");

                    b.Property<string>("Description")
                        .HasMaxLength(2000);

                    b.Property<DateTime>("End");

                    b.Property<string>("Position");

                    b.Property<DateTime>("Start");

                    b.Property<string>("Title")
                        .HasMaxLength(100);

                    b.HasKey("EducationStatesID");

                    b.HasIndex("BaseID");

                    b.ToTable("EducationsStates");
                });

            modelBuilder.Entity("WebCV.Models.Experience", b =>
                {
                    b.Property<int>("ExperienceID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaseID");

                    b.HasKey("ExperienceID");

                    b.HasIndex("BaseID");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("WebCV.Models.ExperienceState", b =>
                {
                    b.Property<int>("ExperienceStateID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaseID");

                    b.Property<string>("Description")
                        .HasMaxLength(2000);

                    b.Property<DateTime>("End");

                    b.Property<string>("Position");

                    b.Property<DateTime>("Start");

                    b.Property<string>("Title")
                        .HasMaxLength(100);

                    b.HasKey("ExperienceStateID");

                    b.HasIndex("BaseID");

                    b.ToTable("ExperiencesStates");
                });

            modelBuilder.Entity("WebCV.Models.Skill", b =>
                {
                    b.Property<int>("SkillID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaseID");

                    b.Property<string>("Title")
                        .HasMaxLength(75);

                    b.HasKey("SkillID");

                    b.HasIndex("BaseID");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("WebCV.Models.SkillState", b =>
                {
                    b.Property<int>("SkillStateID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaseID");

                    b.Property<int>("Percent");

                    b.Property<string>("Position");

                    b.Property<string>("Title");

                    b.HasKey("SkillStateID");

                    b.HasIndex("BaseID");

                    b.ToTable("SkillsStates");
                });

            modelBuilder.Entity("WebCV.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<DateTime>("DateBirdth");

                    b.Property<string>("Name")
                        .HasMaxLength(150);

                    b.Property<string>("Phone")
                        .HasMaxLength(75);

                    b.Property<string>("Photo")
                        .HasMaxLength(100);

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(250);

                    b.Property<string>("Website")
                        .HasMaxLength(150);

                    b.Property<string>("WorkPosition")
                        .HasMaxLength(200);

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebCV.Models.Contact", b =>
                {
                    b.HasOne("WebCV.Models.User", "Base")
                        .WithMany()
                        .HasForeignKey("BaseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebCV.Models.Education", b =>
                {
                    b.HasOne("WebCV.Models.User", "Base")
                        .WithMany()
                        .HasForeignKey("BaseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebCV.Models.EducationState", b =>
                {
                    b.HasOne("WebCV.Models.Education", "Base")
                        .WithMany("States")
                        .HasForeignKey("BaseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebCV.Models.Experience", b =>
                {
                    b.HasOne("WebCV.Models.User", "Base")
                        .WithMany()
                        .HasForeignKey("BaseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebCV.Models.ExperienceState", b =>
                {
                    b.HasOne("WebCV.Models.Experience", "Base")
                        .WithMany("States")
                        .HasForeignKey("BaseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebCV.Models.Skill", b =>
                {
                    b.HasOne("WebCV.Models.User", "Base")
                        .WithMany()
                        .HasForeignKey("BaseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebCV.Models.SkillState", b =>
                {
                    b.HasOne("WebCV.Models.Skill", "Base")
                        .WithMany("States")
                        .HasForeignKey("BaseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
